{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A3\\\\Documents\\\\restaurant-reviews\\\\frontend\\\\src\\\\components\\\\restaurants-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport RestaurantDataService from \"../services/restaurant\";\nimport { Link } from \"react-router-dom\";\nimport restaurant from \"../services/restaurant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantsList = props => {\n  _s();\n\n  // Set variables for search results\n  const [restaurants, setRestaurants] = useState([]);\n  const [searchName, setSearchName] = useState(\"\");\n  const [searchZip, setSearchZip] = useState(\"\");\n  const [searchCuisine, setSearchCuisine] = useState(\"\");\n  const [cuisines, setCuisines] = useState([\"All Cuisines\"]); // useEffect => component needs to do something after rendering\n\n  useEffect(() => {\n    retrieveRestaurants();\n    retrieveCuisines();\n  }, []); // when someone changes the text box,\n  // set searchname to the data entered\n\n  const onChangeSearchName = e => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const onChangeSearchZip = e => {\n    const searchZip = e.target.value;\n    setSearchZip(searchZip);\n  };\n\n  const onChangeSearchCuisine = e => {\n    const searchCuisine = e.target.value;\n    setSearchCuisine(searchCuisine);\n  };\n\n  const retrieveRestaurants = () => {\n    // do RestaurantDataServer.getAll, then log the data and set restaurants variable to the restaurant data\n    RestaurantDataService.getAll().then(response => {\n      console.log(response.data);\n      setRestaurants(response.data.restaurants);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const retrieveCuisines = () => {\n    RestaurantDataService.getCuisines().then(response => {\n      console.log(response.data); // Drop Down menu, Always start with \"All Cuisines\", then concat more cuisines after, stored as array\n\n      setCuisines([\"All Cuisines\"].concat(response.data));\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const refreshList = () => {\n    retrieveRestaurants();\n  };\n\n  const find = (query, by) => {\n    RestaurantDataService.find(query, by).then(response => {\n      console.log(response.data);\n      setRestaurants(response.data.restaurants);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByName = () => {\n    find(searchName, \"name\");\n  };\n\n  const findByZip = () => {\n    find(searchZip, \"zipcode\");\n  };\n\n  const findByCuisine = () => {\n    if (searchCuisine == \"All Cuisines\") {\n      refreshList();\n    } else {\n      find(searchCuisine, \"cuisine\");\n    }\n  };\n\n  const Recipe = props => {\n    /*#__PURE__*/\n    _jsxDEV(Route, { ...props,\n      children: \"// This is where your actual recipe component will live\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group col-lg-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"SearchbyName\",\n          value: searchName,\n          onChange: onChangeSearchName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: findByName,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group col-lg-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by zip\",\n          value: searchZip,\n          onChange: onChangeSearchZip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: findByZip,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group col-lg-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: onChangeSearchCuisine,\n          children: cuisines.map(cuisine => {\n            return (\n              /*#__PURE__*/\n              // the substr(0, 20) means the cusine name is limited to 20 chars\n              _jsxDEV(\"option\", {\n                value: cuisine,\n                children: [\" \", cuisine.substr(0, 20), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: findByCuisine,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: restaurants.map(restaurant => {\n        // get address parts and combine\n        const address = `${restaurant.address.building} ${restaurant.address.street}, ${restaurant.address.zipcode}`;\n        return (\n          /*#__PURE__*/\n          // FROM BOOTSTRAP => use of cards for each entry\n          _jsxDEV(\"div\", {\n            className: \"col-lg-4 pb-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: restaurant.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Cuisine: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, this), restaurant.cuisine, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 67\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Address: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this), address]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/restaurants/\" + restaurant._id,\n                    className: \"btn btn-primary col-lg-5 mx-1 mb-1\",\n                    children: \"View Reviews\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    target: \"_blank\",\n                    href: \"https://www.google.com/maps/place/\" + address,\n                    className: \"btn btn-primary col-lg-5 mx-1 mb-1\",\n                    children: \"View Map\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantsList, \"qP4ccJq+qLTVWRY4CcjRCEH3CMA=\");\n\n_c = RestaurantsList;\nexport default RestaurantsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantsList\");","map":{"version":3,"sources":["C:/Users/A3/Documents/restaurant-reviews/frontend/src/components/restaurants-list.js"],"names":["React","useState","useEffect","RestaurantDataService","Link","restaurant","RestaurantsList","props","restaurants","setRestaurants","searchName","setSearchName","searchZip","setSearchZip","searchCuisine","setSearchCuisine","cuisines","setCuisines","retrieveRestaurants","retrieveCuisines","onChangeSearchName","e","target","value","onChangeSearchZip","onChangeSearchCuisine","getAll","then","response","console","log","data","catch","getCuisines","concat","refreshList","find","query","by","findByName","findByZip","findByCuisine","Recipe","map","cuisine","substr","address","building","street","zipcode","name","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport RestaurantDataService from \"../services/restaurant\";\r\nimport { Link } from \"react-router-dom\";\r\nimport restaurant from \"../services/restaurant\";\r\n\r\nconst RestaurantsList = props => {\r\n  // Set variables for search results\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchZip, setSearchZip] = useState(\"\");\r\n  const [searchCuisine, setSearchCuisine] = useState(\"\");\r\n  const [cuisines, setCuisines] = useState([\"All Cuisines\"])\r\n\r\n  // useEffect => component needs to do something after rendering\r\n  useEffect(() => {\r\n    retrieveRestaurants();\r\n    retrieveCuisines();\r\n  }, []);\r\n\r\n  // when someone changes the text box,\r\n  // set searchname to the data entered\r\n  const onChangeSearchName = e => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  }\r\n\r\n  const onChangeSearchZip = e => {\r\n    const searchZip = e.target.value;\r\n    setSearchZip(searchZip);\r\n  }\r\n\r\n  const onChangeSearchCuisine = e => {\r\n    const searchCuisine = e.target.value;\r\n    setSearchCuisine(searchCuisine);\r\n  }\r\n\r\n  const retrieveRestaurants = () => {\r\n    // do RestaurantDataServer.getAll, then log the data and set restaurants variable to the restaurant data\r\n    RestaurantDataService.getAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const retrieveCuisines = () => {\r\n    RestaurantDataService.getCuisines()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        // Drop Down menu, Always start with \"All Cuisines\", then concat more cuisines after, stored as array\r\n        setCuisines([\"All Cuisines\"].concat(response.data));\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const refreshList = () => {\r\n    retrieveRestaurants();\r\n  }\r\n\r\n  const find = (query, by) => {\r\n    RestaurantDataService.find(query, by)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const findByName = () => {\r\n    find(searchName, \"name\");\r\n  }\r\n\r\n  const findByZip = () => {\r\n    find(searchZip, \"zipcode\")\r\n  }\r\n\r\n  const findByCuisine = () => {\r\n    if (searchCuisine == \"All Cuisines\") {\r\n      refreshList();\r\n    } else {\r\n      find(searchCuisine, \"cuisine\")\r\n    }\r\n  }\r\n  const Recipe = (props) => {\r\n    <Route {...props}>\r\n       // This is where your actual recipe component will live\r\n    </Route>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Boot Strap ClassName's (classes) */}\r\n      <div className=\"row pb-1\">\r\n        {/* TextBox for Searching the Name of a Restaurant */}\r\n        <div className=\"input-group col-lg-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"SearchbyName\"\r\n            value={searchName}\r\n            onChange={onChangeSearchName}\r\n          />\r\n          {/* Button to Search for the Restaurant Entered in the textbox */}\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByName}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* TextBox for Searching the ZipCode of a Restaurant */}\r\n        <div className=\"input-group col-lg-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by zip\"\r\n            value={searchZip}\r\n            onChange={onChangeSearchZip}\r\n          />\r\n          {/* Button to Search for the ZipCode Entered in the textbox */}\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByZip}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* Drop Down Menu for Cuisine Types */}\r\n        <div className=\"input-group col-lg-4\">\r\n          <select onChange={onChangeSearchCuisine}>\r\n            {cuisines.map(cuisine => {\r\n              return (\r\n                // the substr(0, 20) means the cusine name is limited to 20 chars\r\n                <option value={cuisine}> {cuisine.substr(0, 20)} </option>\r\n              )\r\n            })}\r\n          </select>\r\n          {/* Search Button For Cuisine DropDownMenu */}\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByCuisine}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {/* Essentailly a for loop using the map function */}\r\n        {/* for each restaurant in restaurants */}\r\n        {restaurants.map((restaurant) => {\r\n          // get address parts and combine\r\n          const address = `${restaurant.address.building} ${restaurant.address.street}, ${restaurant.address.zipcode}`;\r\n          return (\r\n            // FROM BOOTSTRAP => use of cards for each entry\r\n            <div className=\"col-lg-4 pb-1\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{restaurant.name}</h5>\r\n                  <p className=\"card-text\">\r\n                    <strong>Cuisine: </strong>{restaurant.cuisine}<br/>\r\n                    <strong>Address: </strong>{address}\r\n                  </p>\r\n                  <div className=\"row\">\r\n                  <Link to={\"/restaurants/\"+restaurant._id} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">\r\n                    View Reviews\r\n                  </Link>\r\n                  <a target=\"_blank\" href={\"https://www.google.com/maps/place/\" + address} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">View Map</a>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RestaurantsList;"]},"metadata":{},"sourceType":"module"}